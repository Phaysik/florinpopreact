{"version":3,"sources":["images/bin2dec.png","images/borderradius.png","images/calculator.png","images/christmaslights.png","components/Helmet/Helmet.tsx","components/Home/Home.tsx","components/Bin2Dec/Bin2Dec.tsx","components/BorderRadius/BorderRadius.tsx","components/Projects/Projects.ts","components/ProjectDisplay/ProjectDisplay.tsx","components/Calculator/Calculator.tsx","components/ChristmasLights/ChristmasLights.tsx","components/Router/Router.tsx","index.tsx"],"names":["module","exports","Helmet","title","Home","id","data-testid","activeClassName","to","convert","line","result","power","split","every","char","lineNumber","Number","currSplit","toString","Bin2Dec","className","onChange","e","input","document","getElementById","decimalVals","holdVals","i","length","textContent","substring","processInput","target","value","readOnly","BorderRadius","type","placeholder","element","percentages","replace","filter","match","style","color","box","radius","join","slice","borderRadius","changeRadius","currentTarget","onClick","el","createElement","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","setTimeout","copyText","projectData","projects","location","image","bin2dec","borderradius","calculator","christmaslights","ProjectDisplay","map","item","index","key","src","height","width","alt","valueButton","setInput","setAllClear","mathOp","setMathOp","valuePeriod","includes","valueEquals","setResult","mathCall","leftNumber","rightNumber","operation","total","loopIncrement","res","concat","val","valueMath","indexOf","valueBackspace","Calculator","useState","allClear","useEffect","onkeydown","allowed","processKey","nums","0","1","2","3","4","5","6","7","8","9","onKeyDown","preventDefault","icon","faDivide","faBackspace","faTimes","faMinus","faPlus","faEquals","Array","from","v","rgbToHex","red","green","blue","hexVals","10","11","12","13","14","15","a","Math","floor","b","c","d","f","addLights","rows","lightRows","elem","num","event","button","backgroundColor","updateElement","push","ChristmasLights","stopInter","setStopInter","intensity","setIntensity","time","setTime","setRows","lights","setLights","clearInterval","inputs","querySelectorAll","window","setInterval","getAttribute","max","animate","boxShadow","duration","iterations","startTimer","inten","Router","exact","path","ReactDOM","render"],"mappings":"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AoB,CACzB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,SAGD,GAAIA,EAAQpB,SAASX,GACpB,GAAIA,EAAInC,MAAM,SACbwC,EACC5D,EACA6D,EACAC,EACArE,OAAO6F,EAAQP,QAAQxB,IACvBQ,EACAC,QAGD,OAAQT,GACP,IAAK,IACJU,EAAYjE,EAAO6D,EAAUC,EAAaC,EAAQC,GAClD,MACD,IAAK,QACJG,EAAYnE,EAAO6D,EAAU1E,EAAQiF,GACrC,MACD,IAAK,IACJU,EACC9E,EACA6D,EACA1E,EACAiF,EACAN,EACA,IACAE,GAED,MACD,IAAK,IACJc,EACC9E,EACA6D,EACA1E,EACAiF,EACAN,EACA,IACAE,GAED,MACD,IAAK,IACJc,EACC9E,EACA6D,EACA1E,EACAiF,EACAN,EACA,OACAE,GAED,MACD,IAAK,IACJc,EACC9E,EACA6D,EACA1E,EACAiF,EACAN,EACA,OACAE,GAED,MACD,IAAK,YACJgB,EAAehF,EAAO6D,EAAUC,EAAaC,EAAQC,IAuBvDuB,CACCxF,EAAEwD,IACFpE,EACAiF,EACApE,EACA6D,EACAC,EACAC,EACAC,IAGK,WACN/D,SAASoF,UAAY,SAQvB,IAAMG,EAAmB,CACxBC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QAGJ,OACC,yBAAKrH,GAAG,aAAaC,cAAY,cAChC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQH,MAAM,eACd,yBAAKE,GAAG,kBACP,yBACCA,GAAG,mBACHgB,UAAU,wBACVf,cAAY,oBAEXK,GAGF,yBACCN,GAAG,kBACHgB,UAAU,wBACVf,cAAY,mBAEXkB,GAGF,4BACCnB,GAAG,QACHgB,UAAU,oBACVf,cAAY,QACZgD,QAAS,SAAC/B,GACT+D,GAAY,GACZD,EAAS,KACTO,EAAUe,EAAW,GAAKhG,IAE3BgH,UAAW,SAACpG,GACG,UAAVA,EAAEwD,KACL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","file":"static/js/main.28c2b88c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bin2dec.64ea8a25.png\";","module.exports = __webpack_public_path__ + \"static/media/borderradius.c408ea4b.png\";","module.exports = __webpack_public_path__ + \"static/media/calculator.c52d76df.png\";","module.exports = __webpack_public_path__ + \"static/media/christmaslights.e388bb81.png\";","/**\r\n * @file Change title of the page\r\n * @author Matthew Moore\r\n * @module Helmet\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet as TitleSwitcher } from 'react-helmet';\r\nimport { JSX } from '../../types/types';\r\n\r\n/**\r\n * @desc React component to change the title of the page\r\n * @constant\r\n * @function Helmet\r\n * @param {string} title - The title of the page\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nexport const Helmet = ({ title }: { title: string }): JSX => {\r\n\treturn (\r\n\t\t<TitleSwitcher>\r\n\t\t\t<title>{title}</title>\r\n\t\t</TitleSwitcher>\r\n\t);\r\n};\r\n","/**\r\n * @file Display a button to route back to home\r\n * @author Matthew Moore\r\n * @module Home\r\n * @since 1.0.0\r\n * @version 2.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { JSX } from '../../types/types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './home.css';\r\n\r\n/**\r\n * @desc React component to route back to home\r\n * @constant\r\n * @function Home\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 2.0.0\r\n */\r\nexport const Home = (): JSX => {\r\n\treturn (\r\n\t\t<nav id=\"home\" data-testid=\"home\">\r\n\t\t\t<NavLink activeClassName=\"link\" to=\"/\">\r\n\t\t\t\tHome\r\n\t\t\t</NavLink>\r\n\t\t</nav>\r\n\t);\r\n};\r\n","/**\r\n * @file Convert binary to decimal\r\n * @author Matthew Moore\r\n * @module Bin2Dec\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport { JSX, TextAreaChange } from '../../types/types';\r\nimport './bin2dec.css';\r\n\r\n/**\r\n * @desc Convert the binary to decimal if possible\r\n * @constant\r\n * @function convert\r\n * @param {string} line - The line to process\r\n * @returns {string}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nconst convert = (line: string): string => {\r\n\tlet result: number = 0,\r\n\t\tpower: number = 0;\r\n\r\n\tif (!line.split('').every((char: string) => char === '0' || char === '1'))\r\n\t\treturn 'Invalid binary';\r\n\r\n\tlet lineNumber: number = Number(line);\r\n\r\n\twhile (lineNumber !== 0) {\r\n\t\tconst currSplit: number = lineNumber % 10;\r\n\t\tlineNumber -= currSplit;\r\n\t\tlineNumber /= 10;\r\n\t\tif (currSplit === 1) {\r\n\t\t\tresult += 2 ** power;\r\n\t\t}\r\n\t\tpower++;\r\n\t}\r\n\treturn result.toString();\r\n};\r\n\r\n/**\r\n * @desc Process the input and display the result\r\n * @constant\r\n * @function processInput\r\n * @returns {void}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nconst processInput = (input: string): void => {\r\n\tconst result: HTMLElement | null = document.getElementById('res');\r\n\r\n\tinput += '\\n';\r\n\r\n\tif (result) {\r\n\t\tlet decimalVals: string = '',\r\n\t\t\tholdVals: string = '';\r\n\t\tfor (let i: number = 0; i < input.length; i++) {\r\n\t\t\tif (input[i] === '\\n' && holdVals !== '') {\r\n\t\t\t\tdecimalVals += `${convert(holdVals)}\\n`;\r\n\t\t\t\tholdVals = '';\r\n\t\t\t} else holdVals += input[i];\r\n\t\t}\r\n\r\n\t\tresult.textContent = decimalVals.substring(0, decimalVals.length - 1);\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc The Component to convert binary to decimal\r\n * @constant\r\n * @function Bin2Dec\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\nexport const Bin2Dec = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"bin2dec\" data-testid=\"bin2dec\">\r\n\t\t\t<Helmet title=\"Binary to Decimal\" />\r\n\t\t\t<Home />\r\n\r\n\t\t\t<div id=\"userinput\">\r\n\t\t\t\t<h1 className=\"title\">Binary Input</h1>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"binaryinput\"\r\n\t\t\t\t\tdata-testid=\"userinput\"\r\n\t\t\t\t\tonChange={(e: TextAreaChange) => processInput(e.target.value)}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"result\">\r\n\t\t\t\t<h1 className=\"title\">Decimal Output</h1>\r\n\t\t\t\t<textarea id=\"res\" data-testid=\"result\" readOnly></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file Change the values of border radius in real time\r\n * @author Matthew Moore\r\n * @module BorderRadius\r\n * @since 2.0.0\r\n * @version 3.0.1\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport { JSX, InputChange, ButtonClick } from '../../types/types';\r\nimport './borderradius.css';\r\n\r\n/**\r\n * @desc Change the border radius based on the percentages provided in the input\r\n * @constant\r\n * @function changeRadius\r\n * @returns {void}\r\n * @since 2.0.0\r\n * @version 2.0.0\r\n */\r\nconst changeRadius = (element: HTMLElement | null): void => {\r\n\tconst value: string = (element as HTMLInputElement).value.replace(\r\n\t\t/%|\\//g,\r\n\t\t''\r\n\t);\r\n\r\n\tconst percentages: string[] = value\r\n\t\t.split(' ')\r\n\t\t.filter((char: string) => char.match(/[0-9]/));\r\n\r\n\tif (percentages.length !== 8)\r\n\t\t(element as HTMLInputElement).style.color = 'red';\r\n\telse {\r\n\t\t(element as HTMLInputElement).style.color = 'black';\r\n\r\n\t\tconst box: HTMLElement | null = document.getElementById('preview');\r\n\r\n\t\tlet radius: string = percentages.join('% ') + '%';\r\n\t\tradius =\r\n\t\t\tradius\r\n\t\t\t\t.split(' ')\r\n\t\t\t\t.slice(0, percentages.length / 2)\r\n\t\t\t\t.join(' ') +\r\n\t\t\t' / ' +\r\n\t\t\tradius\r\n\t\t\t\t.split(' ')\r\n\t\t\t\t.slice(percentages.length / 2)\r\n\t\t\t\t.join(' ');\r\n\r\n\t\t(box as HTMLDivElement).style.borderRadius = radius;\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc Copies the text in the input field\r\n * @constant\r\n * @function copyText\r\n * @returns {void}\r\n * @since 2.0.0\r\n * @version 2.0.5\r\n */\r\nconst copyText = (element: HTMLElement | null): void => {\r\n\tconst input: HTMLElement | null = document.getElementById('input');\r\n\r\n\tconst value: string = (input as HTMLInputElement).value.replace(/%|\\//g, '');\r\n\r\n\tconst split: string[] = value\r\n\t\t.split(' ')\r\n\t\t.filter((char: string) => char.match(/[0-9]/));\r\n\r\n\tconst el = document.createElement('textarea');\r\n\tel.value =\r\n\t\t'border-radius: ' +\r\n\t\tsplit.slice(0, split.length / 2).join('% ') +\r\n\t\t'% / ' +\r\n\t\tsplit.slice(split.length / 2).join('% ') +\r\n\t\t'%;';\r\n\tel.setAttribute('readonly', '');\r\n\tel.style.position = 'absolute';\r\n\tel.style.left = '-9999px';\r\n\tdocument.body.appendChild(el);\r\n\tel.select();\r\n\tdocument.execCommand('copy');\r\n\tdocument.body.removeChild(el);\r\n\r\n\t(element as HTMLInputElement).textContent = 'Copied!';\r\n\r\n\tsetTimeout(() => {\r\n\t\t(element as HTMLInputElement).textContent = 'Copy';\r\n\t}, 1000);\r\n};\r\n\r\n/**\r\n * @desc Change the values of border radius in real time\r\n * @constant\r\n * @function BorderRadius\r\n * @returns {JSX}\r\n * @since 2.0.0\r\n * @version 2.0.0\r\n */\r\nexport const BorderRadius = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"borderradius\" data-testid=\"borderradius\">\r\n\t\t\t<Helmet title=\"Border Radius Previewer\" />\r\n\t\t\t<Home />\r\n\r\n\t\t\t<div id=\"userInteraction\">\r\n\t\t\t\t<h1 id=\"head\">Border Radius</h1>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\tdata-testid=\"input\"\r\n\t\t\t\t\tplaceholder=\"0% 0% 0% 0% / 0% 0% 0% 0%\"\r\n\t\t\t\t\tonChange={(e: InputChange) => changeRadius(e.currentTarget)}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"copy\"\r\n\t\t\t\t\tdata-testid=\"copy\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => copyText(e.currentTarget)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"preview\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { projects } from '../../types/types';\r\nimport bin2dec from '../../images/bin2dec.png';\r\nimport borderradius from '../../images/borderradius.png';\r\nimport calculator from '../../images/calculator.png';\r\nimport christmaslights from '../../images/christmaslights.png';\r\n\r\nexport const projectData: projects = {\r\n\tprojects: [\r\n\t\t{\r\n\t\t\tlocation: '/bin2dec',\r\n\t\t\ttitle: 'Binary to Decimal',\r\n\t\t\timage: bin2dec,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlocation: '/borderradius',\r\n\t\t\ttitle: 'Border Radius Previewer',\r\n\t\t\timage: borderradius,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlocation: '/calculator',\r\n\t\t\ttitle: 'Calculator',\r\n\t\t\timage: calculator,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlocation: '/christmaslights',\r\n\t\t\ttitle: 'Christmas Lights',\r\n\t\t\timage: christmaslights,\r\n\t\t},\r\n\t],\r\n};\r\n","/**\r\n * @file The Index page to display all the projects\r\n * @author Matthew Moore\r\n * @module ProjectDisplay\r\n * @since 3.0.0\r\n * @version 3.0.5\r\n */\r\n\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { JSX, project } from '../../types/types';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { projectData } from '../Projects/Projects';\r\nimport './projectdisplay.css';\r\n\r\n/**\r\n * @desc The display page for all the projects\r\n * @constant\r\n * @function ProjectDisplay\r\n * @returns {JSX}\r\n * @since 3.0.0\r\n * @version 3.0.5\r\n */\r\n\r\nexport const ProjectDisplay = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"projectLinks\" data-testid=\"projectDisplay\">\r\n\t\t\t<Helmet title=\"Project List\" />\r\n\r\n\t\t\t<h1 id=\"displayTitle\">Projects</h1>\r\n\r\n\t\t\t<nav id=\"projectDisplay\">\r\n\t\t\t\t{projectData.projects.map((item: project, index: number) => (\r\n\t\t\t\t\t<NavLink to={item.location} key={index}>\r\n\t\t\t\t\t\t<div className=\"projectBox\">\r\n\t\t\t\t\t\t\t<h3 className=\"projectTitle\">{item.title}</h3>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={item.image}\r\n\t\t\t\t\t\t\t\theight={200}\r\n\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\talt={`${item.title} example`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t))}\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file Real time calculator\r\n * @author Matthew Moore\r\n * @module Calculator\r\n * @since 4.5.0\r\n * @version 5.0.0\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n\tButtonClick,\r\n\tJSX,\r\n\tStringState,\r\n\tBoolState,\r\n\tButtonDown,\r\n} from '../../types/types';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport './calculator.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n\tfaBackspace,\r\n\tfaEquals,\r\n\tfaMinus,\r\n\tfaPlus,\r\n\tfaTimes,\r\n\tfaDivide,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n/**\r\n * @desc For when a number button is clicked or pressed\r\n * @constant\r\n * @function valueButton\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @param {number} index - The number to add to the input\r\n * @param {boolean} mathOp - Whether a mathematical operation is happening\r\n * @param {BoolState} setMathOp - Set whether a mathematical operation is happening\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.5.0\r\n */\r\nconst valueButton = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tsetAllClear: BoolState,\r\n\tindex: number,\r\n\tmathOp: boolean,\r\n\tsetMathOp: BoolState\r\n): void => {\r\n\tsetInput(\r\n\t\tmathOp\r\n\t\t\t? index.toString()\r\n\t\t\t: input === '0'\r\n\t\t\t? index.toString()\r\n\t\t\t: `${input}${index.toString()}`\r\n\t);\r\n\tsetMathOp(false);\r\n\tsetAllClear(false);\r\n};\r\n\r\n/**\r\n * @desc For when period is clicked or pressed\r\n * @constant\r\n * @function valuePeriod\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @param {boolean} mathOp - Whether a mathematical operation is happening\r\n * @param {BoolState} setMathOp - Set whether a mathematical operation is happening\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.5.0\r\n */\r\nconst valuePeriod = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tsetAllClear: BoolState,\r\n\tmathOp: boolean,\r\n\tsetMathOp: BoolState\r\n): void => {\r\n\tsetInput(\r\n\t\tmathOp || input === '0' ? '.' : input.includes('.') ? input : `${input}.`\r\n\t);\r\n\r\n\tsetMathOp(false);\r\n\r\n\tsetAllClear(false);\r\n};\r\n\r\n/**\r\n * @desc For when the equals key is clicked or pressed\r\n * @constant\r\n * @function valueEquals\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {string} result - The current result\r\n * @param {StringState} setResult - Set the result to a certain value\r\n * @param {boolean} mathCall - Whether a mathematical operation is happening\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.5.0\r\n */\r\nconst valueEquals = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tresult: string,\r\n\tsetResult: StringState,\r\n\tmathCall: boolean = false\r\n): void => {\r\n\tlet leftNumber: number = 0,\r\n\t\trightNumber: number = 0,\r\n\t\toperation: string = '',\r\n\t\ttotal: number = Number(input !== '.' ? input : '0'),\r\n\t\tloopIncrement: number = 3;\r\n\r\n\tconst res: string[] = result\r\n\t\t.split(' ')\r\n\t\t.concat([input])\r\n\t\t.filter((val: string) => val !== '' && input !== '.');\r\n\r\n\tif (!res.includes('=')) {\r\n\t\tfor (let i: number = 0; i < res.length - 1; i += loopIncrement) {\r\n\t\t\tif (i === 0) {\r\n\t\t\t\tleftNumber = Number(res[i]);\r\n\t\t\t\toperation = res[i + 1];\r\n\t\t\t\trightNumber = Number(res[i + 2]);\r\n\t\t\t} else {\r\n\t\t\t\tleftNumber = total;\r\n\t\t\t\toperation = res[i];\r\n\t\t\t\trightNumber = Number(res[i + 1]);\r\n\t\t\t\tloopIncrement -= loopIncrement === 3 ? 1 : 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (operation === '÷') total = leftNumber / rightNumber;\r\n\t\t\telse if (operation === '×') total = leftNumber * rightNumber;\r\n\t\t\telse if (operation === '-') total = leftNumber - rightNumber;\r\n\t\t\telse total = leftNumber + rightNumber;\r\n\t\t}\r\n\r\n\t\tsetInput(total.toString());\r\n\r\n\t\tif (!mathCall && input !== '.') setResult(`${result} ${input} = `);\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc For when a mathematical operation key is clicked or pressed\r\n * @constant\r\n * @function valueMath\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {string} result - The current result\r\n * @param {StringState} setResult - Set the result to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @param {string} operation - Mathematical operation to do\r\n * @param {BoolState} setMathOp - Set whether a mathematical operation is happening\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.5.0\r\n */\r\nconst valueMath = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tresult: string,\r\n\tsetResult: StringState,\r\n\tsetAllClear: BoolState,\r\n\toperation: string,\r\n\tsetMathOp: BoolState\r\n): void => {\r\n\tsetResult(\r\n\t\t`${result.substring(result.indexOf('=') + 1) + input} ${operation} `\r\n\t);\r\n\r\n\tsetMathOp(true);\r\n\r\n\tvalueEquals(\r\n\t\tinput.substring(0, input.length),\r\n\t\tsetInput,\r\n\t\tresult,\r\n\t\tsetResult,\r\n\t\ttrue\r\n\t);\r\n\r\n\tsetAllClear(true);\r\n};\r\n\r\n/**\r\n * @desc For when the backspace key is clicked or pressed\r\n * @constant\r\n * @function valueBackspace\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @param {boolean} mathOp - Whether a mathematical operation is happening\r\n * @param {BoolState} setMathOp - Set whether a mathematical operation is happening\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.5.0\r\n */\r\nconst valueBackspace = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tsetAllClear: BoolState,\r\n\tmathOp: boolean,\r\n\tsetMathOp: BoolState\r\n): void => {\r\n\tsetInput(\r\n\t\tmathOp\r\n\t\t\t? '0'\r\n\t\t\t: input[0] === '-' && input.length > 2\r\n\t\t\t? input.substring(0, input.length - 1)\r\n\t\t\t: input[0] === '-'\r\n\t\t\t? '0'\r\n\t\t\t: input.substring(0, input.length - 1).length === 0\r\n\t\t\t? '0'\r\n\t\t\t: input.substring(0, input.length - 1)\r\n\t);\r\n\r\n\tsetMathOp(false);\r\n\r\n\tsetAllClear(\r\n\t\tinput[0] === '-' && input.length > 0\r\n\t\t\t? input.length - 2 === 0\r\n\t\t\t: input.length - 1 === 0\r\n\t);\r\n};\r\n\r\n/**\r\n * @desc For when a key is pressed\r\n * @constant\r\n * @function processKey\r\n * @param {string} key - The key pressed\r\n * @param {string} result - The current result\r\n * @param {StringState} setResult - Set the result to a certain value\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @param {boolean} mathOp - Whether a mathematical operation is happening\r\n * @param {BoolState} setMathOp - Set whether a mathematical operation is happening\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.5.0\r\n */\r\nconst processKey = (\r\n\tkey: string,\r\n\tresult: string,\r\n\tsetResult: StringState,\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tsetAllClear: BoolState,\r\n\tmathOp: boolean,\r\n\tsetMathOp: BoolState\r\n): void => {\r\n\tconst allowed: string[] = [\r\n\t\t'0',\r\n\t\t'1',\r\n\t\t'2',\r\n\t\t'3',\r\n\t\t'4',\r\n\t\t'5',\r\n\t\t'6',\r\n\t\t'7',\r\n\t\t'8',\r\n\t\t'9',\r\n\t\t'/',\r\n\t\t'-',\r\n\t\t'+',\r\n\t\t'*',\r\n\t\t'.',\r\n\t\t'Backspace',\r\n\t\t'Enter',\r\n\t];\r\n\r\n\tif (allowed.includes(key)) {\r\n\t\tif (key.match(/[0-9]/))\r\n\t\t\tvalueButton(\r\n\t\t\t\tinput,\r\n\t\t\t\tsetInput,\r\n\t\t\t\tsetAllClear,\r\n\t\t\t\tNumber(allowed.indexOf(key)),\r\n\t\t\t\tmathOp,\r\n\t\t\t\tsetMathOp\r\n\t\t\t);\r\n\t\telse {\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase '.':\r\n\t\t\t\t\tvaluePeriod(input, setInput, setAllClear, mathOp, setMathOp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Enter':\r\n\t\t\t\t\tvalueEquals(input, setInput, result, setResult);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t'+',\r\n\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t'-',\r\n\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t'×',\r\n\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t'÷',\r\n\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Backspace':\r\n\t\t\t\t\tvalueBackspace(input, setInput, setAllClear, mathOp, setMathOp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc Real time calculator\r\n * @constant\r\n * @function Calculator\r\n * @returns {JSX}\r\n * @since 4.0.0\r\n * @version 4.5.0\r\n */\r\nexport const Calculator = (): JSX => {\r\n\tconst [result, setResult] = useState('');\r\n\tconst [mathOp, setMathOp] = useState(false);\r\n\tconst [input, setInput] = useState('0');\r\n\tconst [allClear, setAllClear] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.onkeydown = (e: KeyboardEvent) =>\r\n\t\t\tprocessKey(\r\n\t\t\t\te.key,\r\n\t\t\t\tresult,\r\n\t\t\t\tsetResult,\r\n\t\t\t\tinput,\r\n\t\t\t\tsetInput,\r\n\t\t\t\tsetAllClear,\r\n\t\t\t\tmathOp,\r\n\t\t\t\tsetMathOp\r\n\t\t\t);\r\n\r\n\t\treturn function cleanup() {\r\n\t\t\tdocument.onkeydown = null;\r\n\t\t};\r\n\t});\r\n\r\n\tinterface Dictionary {\r\n\t\t[key: number]: string;\r\n\t}\r\n\r\n\tconst nums: Dictionary = {\r\n\t\t0: 'zero',\r\n\t\t1: 'one',\r\n\t\t2: 'two',\r\n\t\t3: 'three',\r\n\t\t4: 'four',\r\n\t\t5: 'five',\r\n\t\t6: 'six',\r\n\t\t7: 'seven',\r\n\t\t8: 'eight',\r\n\t\t9: 'nine',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"calculator\" data-testid=\"calculator\">\r\n\t\t\t<Home />\r\n\t\t\t<Helmet title=\"Calculator\" />\r\n\t\t\t<div id=\"calculatorGrid\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"calculatorOutput\"\r\n\t\t\t\t\tclassName=\"whiteColor operations\"\r\n\t\t\t\t\tdata-testid=\"calculatorOutput\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{result}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tid=\"calculatorInput\"\r\n\t\t\t\t\tclassName=\"whiteColor operations\"\r\n\t\t\t\t\tdata-testid=\"calculatorInput\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{input}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"clear\"\r\n\t\t\t\t\tclassName=\"whiteColor topRow\"\r\n\t\t\t\t\tdata-testid=\"clear\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => {\r\n\t\t\t\t\t\tsetAllClear(true);\r\n\t\t\t\t\t\tsetInput('0');\r\n\t\t\t\t\t\tsetResult(allClear ? '' : result);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{allClear ? 'AC' : 'C'}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"sign\"\r\n\t\t\t\t\tclassName=\"whiteColor topRow\"\r\n\t\t\t\t\tdata-testid=\"sign\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tsetInput(input[0] === '-' ? input.substring(1) : `-${input}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t+/-\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"division\"\r\n\t\t\t\t\tclassName=\"topRow\"\r\n\t\t\t\t\tdata-testid=\"division\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t\t'÷',\r\n\t\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor topRow\" icon={faDivide} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"backspace\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tdata-testid=\"backspace\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueBackspace(input, setInput, setAllClear, mathOp, setMathOp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faBackspace} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"mult\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tdata-testid=\"mult\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t\t'×',\r\n\t\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faTimes} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"minus\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tdata-testid=\"minus\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t\t'-',\r\n\t\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faMinus} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"plus\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tdata-testid=\"plus\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(\r\n\t\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\t\tresult,\r\n\t\t\t\t\t\t\tsetResult,\r\n\t\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t\t'+',\r\n\t\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faPlus} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"equals\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tdata-testid=\"equals\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueEquals(input, setInput, result, setResult)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faEquals} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"period\"\r\n\t\t\t\t\tclassName=\"whiteColor numberPeriod\"\r\n\t\t\t\t\tdata-testid=\"period\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvaluePeriod(input, setInput, setAllClear, mathOp, setMathOp)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t.\r\n\t\t\t\t</button>\r\n\t\t\t\t{Array.from({ length: 10 }, (v: undefined, i: number) => i).map(\r\n\t\t\t\t\t(value: number, index: number) => (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid={nums[index]}\r\n\t\t\t\t\t\t\tclassName=\"whiteColor numberPeriod\"\r\n\t\t\t\t\t\t\tdata-testid={nums[index]}\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\t\t\tvalueButton(\r\n\t\t\t\t\t\t\t\t\tinput,\r\n\t\t\t\t\t\t\t\t\tsetInput,\r\n\t\t\t\t\t\t\t\t\tsetAllClear,\r\n\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\tmathOp,\r\n\t\t\t\t\t\t\t\t\tsetMathOp\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{index}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file Christmas Lights\r\n * @author Matthew Moore\r\n * @module ChristmasLights\r\n * @since 5.0.0\r\n * @version 5.0.0\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { JSX, InputChange, ButtonClick } from '../../types/types';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport './christmaslights.css';\r\n\r\n/**\r\n * @desc Change the background color of the input element\r\n * @constant\r\n * @function updateElement\r\n * @param {InputChange} event - The event which was fired\r\n * @param {string} id - The id of the element to change\r\n * @returns {void}\r\n * @since 5.0.0\r\n * @version 5.0.0\r\n */\r\nconst updateElement = (event: InputChange, id: string): void => {\r\n\tconst button: HTMLElement | null = document.getElementById(id);\r\n\r\n\tif (button) {\r\n\t\tbutton.style.backgroundColor = event.target.value;\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc Convert rgb to hex\r\n * @constant\r\n * @function rgbToHex\r\n * @param {number} red - The red value\r\n * @param {number} green - The green value\r\n * @param {number} blue - The blue value\r\n * @returns {string}\r\n * @since 5.0.0\r\n * @version 5.0.0\r\n */\r\nconst rgbToHex = (red: number, green: number, blue: number): string => {\r\n\tinterface HexDictionary {\r\n\t\t[key: number]: number | string;\r\n\t}\r\n\r\n\tconst hexVals: HexDictionary = {\r\n\t\t0: 0,\r\n\t\t1: 1,\r\n\t\t2: 2,\r\n\t\t3: 3,\r\n\t\t4: 4,\r\n\t\t5: 5,\r\n\t\t6: 6,\r\n\t\t7: 7,\r\n\t\t8: 8,\r\n\t\t9: 9,\r\n\t\t10: 'A',\r\n\t\t11: 'B',\r\n\t\t12: 'C',\r\n\t\t13: 'D',\r\n\t\t14: 'E',\r\n\t\t15: 'F',\r\n\t};\r\n\r\n\tconst a: number | string = hexVals[Math.floor(red / 16)];\r\n\tconst b: number | string = hexVals[red % 16];\r\n\tconst c: number | string = hexVals[Math.floor(green / 16)];\r\n\tconst d: number | string = hexVals[green % 16];\r\n\tconst e: number | string = hexVals[Math.floor(blue / 16)];\r\n\tconst f: number | string = hexVals[blue % 16];\r\n\treturn `#${a}${b}${c}${d}${e}${f}`;\r\n};\r\n\r\n/**\r\n * @desc Start the interval timers\r\n * @constant\r\n * @function startTimer\r\n * @param {number} intensity - The intensity of the of the pixels\r\n * @param {number} time - The interval of time to do the lighting\r\n * @returns {number}\r\n * @since 5.0.0\r\n * @version 5.0.0\r\n */\r\nconst startTimer = (intensity: number, time: number): number => {\r\n\tconst inputs: NodeListOf<Element> = document.querySelectorAll(\r\n\t\t'.lights input'\r\n\t);\r\n\r\n\treturn window.setInterval(() => {\r\n\t\tfor (let i: number = 0; i < inputs.length; i++) {\r\n\t\t\tconst style: string | null = inputs[i].getAttribute('style');\r\n\t\t\tlet color: string = '#424141';\r\n\r\n\t\t\tif (inputs[i].className.includes('on')) {\r\n\t\t\t\tinputs[i].className = 'off';\r\n\t\t\t} else {\r\n\t\t\t\tinputs[i].className = 'on';\r\n\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\tconst split: string[] = style.split(' ');\r\n\t\t\t\t\tconst red: number = Number(\r\n\t\t\t\t\t\tsplit[1].substring(4, split[1].length - 1)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst green: number = Number(\r\n\t\t\t\t\t\tsplit[2].substring(0, split[2].length - 1)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst blue: number = Number(\r\n\t\t\t\t\t\tsplit[3].substring(0, split[3].length - 2)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst max: number = Math.max(red, green, blue);\r\n\r\n\t\t\t\t\tcolor = rgbToHex(\r\n\t\t\t\t\t\tmax === red ? (red - intensity > 0 ? red - intensity : 0) : red,\r\n\t\t\t\t\t\tmax === green\r\n\t\t\t\t\t\t\t? green - intensity > 0\r\n\t\t\t\t\t\t\t\t? green - intensity\r\n\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t: green,\r\n\t\t\t\t\t\tmax === blue ? (blue - intensity > 0 ? blue - intensity : 0) : blue\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tinputs[i].animate(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t// keyframes\r\n\t\t\t\t\t\t{ boxShadow: 'none' },\r\n\t\t\t\t\t\t{ boxShadow: `0px 0px 10px 8px ${color}` },\r\n\t\t\t\t\t\t{ boxShadow: 'none' },\r\n\t\t\t\t\t],\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// timing options\r\n\t\t\t\t\t\tduration: time * 1000,\r\n\t\t\t\t\t\titerations: 1,\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}, time * 1000);\r\n};\r\n\r\n/**\r\n * @desc Add rows of lights based on the param rows\r\n * @constant\r\n * @function addLights\r\n * @param {number} rows - The amount of light rows to add\r\n * @returns {JSX[]}\r\n * @since 5.0.0\r\n * @version 5.0.0\r\n */\r\nconst addLights = (rows: number): JSX[] => {\r\n\tlet lightRows: JSX[] = [];\r\n\r\n\tfor (let i: number = 0; i < rows; i++) {\r\n\t\tlet elem: JSX = (\r\n\t\t\t<div className=\"lights\" key={i}>\r\n\t\t\t\t{Array.from({ length: 7 }, (v: unknown, i: number) => i).map(\r\n\t\t\t\t\t(num: number) => (\r\n\t\t\t\t\t\t<div className=\"lightClick\" key={num}>\r\n\t\t\t\t\t\t\t<div className={num !== 6 ? 'box lighttop' : 'box'}></div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\t\t\tid={(num + 7 * i).toString()}\r\n\t\t\t\t\t\t\t\tclassName={!(num % 2) ? 'on' : 'off'}\r\n\t\t\t\t\t\t\t\tonChange={(e: InputChange) =>\r\n\t\t\t\t\t\t\t\t\tupdateElement(e, (num + 7 * i).toString())\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tlightRows.push(elem);\r\n\t}\r\n\r\n\treturn lightRows;\r\n};\r\n\r\n/**\r\n * @desc Christmas Lights\r\n * @constant\r\n * @function ChristmasLights\r\n * @returns {JSX}\r\n * @since 5.0.0\r\n * @version 5.0.0\r\n */\r\nexport const ChristmasLights = (): JSX => {\r\n\tconst [stopInter, setStopInter] = useState(0);\r\n\tconst [intensity, setIntensity] = useState(0);\r\n\tconst [time, setTime] = useState(1);\r\n\tconst [rows, setRows] = useState(1);\r\n\tconst [lights, setLights] = useState([] as JSX.Element[]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLights(addLights(rows));\r\n\r\n\t\treturn () => clearInterval(stopInter);\r\n\t}, [rows, stopInter]);\r\n\r\n\treturn (\r\n\t\t<div id=\"christmaslights\" data-testid=\"christmaslights\">\r\n\t\t\t<Helmet title=\"Christmas Lights\" />\r\n\t\t\t<Home />\r\n\r\n\t\t\t{lights}\r\n\r\n\t\t\t<div id=\"lightManip\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"start\"\r\n\t\t\t\t\tdata-testid=\"start\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tsetStopInter(startTimer(intensity, time))\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tStart\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"end\"\r\n\t\t\t\t\tdata-testid=\"end\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => clearInterval(stopInter)}\r\n\t\t\t\t>\r\n\t\t\t\t\tStop\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"addRows\"\r\n\t\t\t\t\tdata-testid=\"addRows\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => setRows(rows + 1)}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd Rows\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"removeRows\"\r\n\t\t\t\t\tdata-testid=\"removeRows\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => setRows(rows - 1)}\r\n\t\t\t\t>\r\n\t\t\t\t\tRemove Rows\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Enter an intensity value\"\r\n\t\t\t\t\tid=\"intensity\"\r\n\t\t\t\t\tdata-testid=\"intensity\"\r\n\t\t\t\t\tonChange={(e: InputChange) => {\r\n\t\t\t\t\t\tconst inten: string = e.target.value.replace(/[^0-9]/gi, '');\r\n\r\n\t\t\t\t\t\t(document.getElementById(\r\n\t\t\t\t\t\t\t'intensity'\r\n\t\t\t\t\t\t) as HTMLInputElement).value = inten;\r\n\r\n\t\t\t\t\t\tsetIntensity(Number(inten) | 0);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Enter a time interval\"\r\n\t\t\t\t\tid=\"timeInterval\"\r\n\t\t\t\t\tdata-testid=\"timeInterval\"\r\n\t\t\t\t\tonChange={(e: InputChange) => {\r\n\t\t\t\t\t\tconst inten: string = e.target.value.replace(/[^0-9]/gi, '');\r\n\r\n\t\t\t\t\t\t(document.getElementById(\r\n\t\t\t\t\t\t\t'timeInterval'\r\n\t\t\t\t\t\t) as HTMLInputElement).value = inten;\r\n\r\n\t\t\t\t\t\tsetTime(Number(inten) | 1);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file The Router for all the projects\r\n * @author Matthew Moore\r\n * @module Router\r\n * @since 1.0.0\r\n * @version 5.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { HashRouter as Routes, Switch, Route } from 'react-router-dom';\r\nimport { Bin2Dec } from '../Bin2Dec/Bin2Dec';\r\nimport { BorderRadius } from '../BorderRadius/BorderRadius';\r\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay';\r\nimport { Calculator } from '../Calculator/Calculator';\r\nimport { ChristmasLights } from '../ChristmasLights/ChristmasLights';\r\nimport { JSX } from '../../types/types';\r\n\r\n/**\r\n * @desc The Router for all the projects\r\n * @constant\r\n * @function Router\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 5.0.0\r\n */\r\nexport const Router = (): JSX => {\r\n\treturn (\r\n\t\t<Routes>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<ProjectDisplay />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/bin2dec\">\r\n\t\t\t\t\t<Bin2Dec />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/borderradius\">\r\n\t\t\t\t\t<BorderRadius />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/calculator\">\r\n\t\t\t\t\t<Calculator />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/christmaslights\">\r\n\t\t\t\t\t<ChristmasLights />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Routes>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Router } from './components/Router/Router';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n"],"sourceRoot":""}