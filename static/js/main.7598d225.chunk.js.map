{"version":3,"sources":["images/bin2dec.png","images/borderradius.png","components/Helmet/Helmet.tsx","components/Home/Home.tsx","components/Bin2Dec/Bin2Dec.tsx","components/BorderRadius/BorderRadius.tsx","components/Projects/Projects.ts","components/ProjectDisplay/ProjectDisplay.tsx","components/Router/Router.tsx","index.tsx"],"names":["module","exports","Helmet","title","Home","id","data-testid","activeClassName","to","convert","line","result","power","split","every","char","lineNumber","Number","currSplit","toString","Bin2Dec","className","onChange","e","input","document","getElementById","decimalVals","holdVals","i","length","textContent","substring","processInput","target","value","readOnly","BorderRadius","type","placeholder","element","percentages","replace","filter","match","style","color","box","radius","join","slice","borderRadius","changeRadius","currentTarget","onClick","el","createElement","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","setTimeout","copyText","images","bin2dec","borderradius","projectData","projects","location","image","ProjectDisplay","map","item","index","key","src","height","width","alt","Router","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.7598d225.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bin2dec.64ea8a25.png\";","module.exports = __webpack_public_path__ + \"static/media/borderradius.c408ea4b.png\";","/**\r\n * @file Change title of the page\r\n * @author Matthew Moore\r\n * @module Helmet\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet as TitleSwitcher } from 'react-helmet';\r\nimport { JSX } from '../../types/types';\r\n\r\n/**\r\n * @desc React component to change the title of the page\r\n * @constant\r\n * @function Helmet\r\n * @param {string} title - The title of the page\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nexport const Helmet = ({ title }: { title: string }): JSX => {\r\n\treturn (\r\n\t\t<TitleSwitcher>\r\n\t\t\t<title>{title}</title>\r\n\t\t</TitleSwitcher>\r\n\t);\r\n};\r\n","/**\r\n * @file Display a button to route back to home\r\n * @author Matthew Moore\r\n * @module Home\r\n * @since 1.0.0\r\n * @version 2.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { JSX } from '../../types/types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './home.css';\r\n\r\n/**\r\n * @desc React component to route back to home\r\n * @constant\r\n * @function Home\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 2.0.0\r\n */\r\nexport const Home = (): JSX => {\r\n\treturn (\r\n\t\t<nav id=\"home\" data-testid=\"home\">\r\n\t\t\t<NavLink activeClassName=\"link\" to=\"/\">\r\n\t\t\t\tHome\r\n\t\t\t</NavLink>\r\n\t\t</nav>\r\n\t);\r\n};\r\n","/**\r\n * @file Convert binary to decimal\r\n * @author Matthew Moore\r\n * @module Bin2Dec\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport { JSX, InputEvent } from '../../types/types';\r\nimport './bin2dec.css';\r\n\r\n/**\r\n * @desc Convert the binary to decimal if possible\r\n * @constant\r\n * @function convert\r\n * @param {string} line - The line to process\r\n * @returns {string}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nconst convert = (line: string): string => {\r\n\tlet result: number = 0,\r\n\t\tpower: number = 0;\r\n\r\n\tif (!line.split('').every((char: string) => char === '0' || char === '1'))\r\n\t\treturn 'Invalid binary';\r\n\r\n\tlet lineNumber: number = Number(line);\r\n\r\n\twhile (lineNumber !== 0) {\r\n\t\tconst currSplit: number = lineNumber % 10;\r\n\t\tlineNumber -= currSplit;\r\n\t\tlineNumber /= 10;\r\n\t\tif (currSplit === 1) {\r\n\t\t\tresult += 2 ** power;\r\n\t\t}\r\n\t\tpower++;\r\n\t}\r\n\treturn result.toString();\r\n};\r\n\r\n/**\r\n * @desc Process the input and display the result\r\n * @constant\r\n * @function processInput\r\n * @returns {void}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nconst processInput = (input: string): void => {\r\n\tconst result: HTMLElement | null = document.getElementById('res');\r\n\r\n\tinput += '\\n';\r\n\r\n\tif (result) {\r\n\t\tlet decimalVals: string = '',\r\n\t\t\tholdVals: string = '';\r\n\t\tfor (let i: number = 0; i < input.length; i++) {\r\n\t\t\tif (input[i] === '\\n' && holdVals !== '') {\r\n\t\t\t\tdecimalVals += `${convert(holdVals)}\\n`;\r\n\t\t\t\tholdVals = '';\r\n\t\t\t} else holdVals += input[i];\r\n\t\t}\r\n\r\n\t\tresult.textContent = decimalVals.substring(0, decimalVals.length - 1);\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc The Component to convert binary to decimal\r\n * @constant\r\n * @function Bin2Dec\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\nexport const Bin2Dec = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"bin2dec\" data-testid=\"bin2dec\">\r\n\t\t\t<Helmet title=\"Binary to Decimal\" />\r\n\t\t\t<Home />\r\n\r\n\t\t\t<div id=\"userinput\">\r\n\t\t\t\t<h1 className=\"title\">Binary Input</h1>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"binaryinput\"\r\n\t\t\t\t\tdata-testid=\"userinput\"\r\n\t\t\t\t\tonChange={(e: InputEvent) => processInput(e.target.value)}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"result\">\r\n\t\t\t\t<h1 className=\"title\">Decimal Output</h1>\r\n\t\t\t\t<textarea id=\"res\" data-testid=\"result\" readOnly></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file Change the values of border radius in real time\r\n * @author Matthew Moore\r\n * @module BorderRadius\r\n * @since 2.0.0\r\n * @version 3.0.1\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport { JSX, InputChange, ButtonClick } from '../../types/types';\r\nimport './borderradius.css';\r\n\r\n/**\r\n * @desc Change the border radius based on the percentages provided in the input\r\n * @constant\r\n * @function changeRadius\r\n * @returns {void}\r\n * @since 2.0.0\r\n * @version 2.0.0\r\n */\r\nconst changeRadius = (element: HTMLElement | null): void => {\r\n\tconst value: string = (element as HTMLInputElement).value.replace(\r\n\t\t/%|\\//g,\r\n\t\t''\r\n\t);\r\n\r\n\tconst percentages: string[] = value\r\n\t\t.split(' ')\r\n\t\t.filter((char: string) => char.match(/[0-9]/));\r\n\r\n\tif (percentages.length !== 8)\r\n\t\t(element as HTMLInputElement).style.color = 'red';\r\n\telse {\r\n\t\t(element as HTMLInputElement).style.color = 'black';\r\n\r\n\t\tconst box: HTMLElement | null = document.getElementById('preview');\r\n\r\n\t\tlet radius: string = percentages.join('% ') + '%';\r\n\t\tradius =\r\n\t\t\tradius\r\n\t\t\t\t.split(' ')\r\n\t\t\t\t.slice(0, percentages.length / 2)\r\n\t\t\t\t.join(' ') +\r\n\t\t\t' / ' +\r\n\t\t\tradius\r\n\t\t\t\t.split(' ')\r\n\t\t\t\t.slice(percentages.length / 2)\r\n\t\t\t\t.join(' ');\r\n\r\n\t\t(box as HTMLDivElement).style.borderRadius = radius;\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc Copies the text in the input field\r\n * @constant\r\n * @function copyText\r\n * @returns {void}\r\n * @since 2.0.0\r\n * @version 2.0.5\r\n */\r\nconst copyText = (element: HTMLElement | null): void => {\r\n\tconst input: HTMLElement | null = document.getElementById('input');\r\n\r\n\tconst value: string = (input as HTMLInputElement).value.replace(/%|\\//g, '');\r\n\r\n\tconst split: string[] = value\r\n\t\t.split(' ')\r\n\t\t.filter((char: string) => char.match(/[0-9]/));\r\n\r\n\tconst el = document.createElement('textarea');\r\n\tel.value =\r\n\t\t'border-radius: ' +\r\n\t\tsplit.slice(0, split.length / 2).join('% ') +\r\n\t\t'% / ' +\r\n\t\tsplit.slice(split.length / 2).join('% ') +\r\n\t\t'%;';\r\n\tel.setAttribute('readonly', '');\r\n\tel.style.position = 'absolute';\r\n\tel.style.left = '-9999px';\r\n\tdocument.body.appendChild(el);\r\n\tel.select();\r\n\tdocument.execCommand('copy');\r\n\tdocument.body.removeChild(el);\r\n\r\n\t(element as HTMLInputElement).textContent = 'Copied!';\r\n\r\n\tsetTimeout(() => {\r\n\t\t(element as HTMLInputElement).textContent = 'Copy';\r\n\t}, 1000);\r\n};\r\n\r\n/**\r\n * @desc Change the values of border radius in real time\r\n * @constant\r\n * @function BorderRadius\r\n * @returns {JSX}\r\n * @since 2.0.0\r\n * @version 2.0.0\r\n */\r\nexport const BorderRadius = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"borderradius\" data-testid=\"borderradius\">\r\n\t\t\t<Helmet title=\"Border Radius Previewer\" />\r\n\t\t\t<Home />\r\n\r\n\t\t\t<div id=\"userInteraction\">\r\n\t\t\t\t<h1 id=\"head\">Border Radius</h1>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\tdata-testid=\"input\"\r\n\t\t\t\t\tplaceholder=\"0% 0% 0% 0% / 0% 0% 0% 0%\"\r\n\t\t\t\t\tonChange={(e: InputChange) => changeRadius(e.currentTarget)}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"copy\"\r\n\t\t\t\t\tdata-testid=\"copy\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => copyText(e.currentTarget)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"preview\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { projects } from '../../types/types';\r\nimport bin2dec from '../../images/bin2dec.png';\r\nimport borderradius from '../../images/borderradius.png';\r\n\r\nconst images = {\r\n\tbin2dec: bin2dec,\r\n\tborderradius: borderradius,\r\n};\r\n\r\nexport const projectData: projects = {\r\n\tprojects: [\r\n\t\t{\r\n\t\t\tlocation: '/bin2dec',\r\n\t\t\ttitle: 'Binary to Decimal',\r\n\t\t\timage: images['bin2dec'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlocation: '/borderradius',\r\n\t\t\ttitle: 'Border Radius Previewer',\r\n\t\t\timage: images['borderradius'],\r\n\t\t},\r\n\t],\r\n};\r\n","/**\r\n * @file The Index page to display all the projects\r\n * @author Matthew Moore\r\n * @module ProjectDisplay\r\n * @since 3.0.0\r\n * @version 3.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { JSX, project } from '../../types/types';\r\nimport { projectData } from '../Projects/Projects';\r\nimport './projectdisplay.css';\r\n\r\n/**\r\n * @desc The display page for all the projects\r\n * @constant\r\n * @function ProjectDisplay\r\n * @returns {JSX}\r\n * @since 3.0.0\r\n * @version 3.0.0\r\n */\r\n\r\nexport const ProjectDisplay = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"projectLinks\" data-testid=\"projectDisplay\">\r\n\t\t\t<h1 id=\"displayTitle\">Projects</h1>\r\n\t\t\t<nav id=\"projectDisplay\">\r\n\t\t\t\t{projectData.projects.map((item: project, index: number) => (\r\n\t\t\t\t\t<NavLink to={item.location} key={index}>\r\n\t\t\t\t\t\t<div className=\"projectBox\">\r\n\t\t\t\t\t\t\t<h3 className=\"projectTitle\">{item.title}</h3>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={item.image}\r\n\t\t\t\t\t\t\t\theight={200}\r\n\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\talt={`${item.title} example`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t))}\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file The Router for all the projects\r\n * @author Matthew Moore\r\n * @module Router\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { HashRouter as Routes, Switch, Route } from 'react-router-dom';\r\nimport { Bin2Dec } from '../Bin2Dec/Bin2Dec';\r\nimport { BorderRadius } from '../BorderRadius/BorderRadius';\r\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay';\r\nimport { JSX } from '../../types/types';\r\n\r\n/**\r\n * @desc The Router for all the projects\r\n * @constant\r\n * @function Router\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\nexport const Router = (): JSX => {\r\n\treturn (\r\n\t\t<Routes>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<ProjectDisplay />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/bin2dec\">\r\n\t\t\t\t\t<Bin2Dec />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/borderradius\">\r\n\t\t\t\t\t<BorderRadius />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Routes>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Router } from './components/Router/Router';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n"],"sourceRoot":""}