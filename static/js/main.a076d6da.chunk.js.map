{"version":3,"sources":["images/bin2dec.png","images/borderradius.png","images/calculator.png","components/Helmet/Helmet.tsx","components/Home/Home.tsx","components/Bin2Dec/Bin2Dec.tsx","components/BorderRadius/BorderRadius.tsx","components/Projects/Projects.ts","components/ProjectDisplay/ProjectDisplay.tsx","components/Calculator/Calculator.tsx","components/Router/Router.tsx","index.tsx"],"names":["module","exports","Helmet","title","Home","id","data-testid","activeClassName","to","convert","line","result","power","split","every","char","lineNumber","Number","currSplit","toString","Bin2Dec","className","onChange","e","input","document","getElementById","decimalVals","holdVals","i","length","textContent","substring","processInput","target","value","readOnly","BorderRadius","type","placeholder","element","percentages","replace","filter","match","style","color","box","radius","join","slice","borderRadius","changeRadius","currentTarget","onClick","el","createElement","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","setTimeout","copyText","projectData","projects","location","image","bin2dec","borderradius","calculator","ProjectDisplay","map","item","index","key","src","height","width","alt","valueButton","setInput","setAllClear","valuePeriod","includes","valueEquals","setResult","leftNumber","rightNumber","valueMath","operation","valueBackspace","Calculator","useState","allClear","useEffect","onkeydown","allowed","indexOf","processKey","nums","0","1","2","3","4","5","6","7","8","9","onKeyDown","preventDefault","icon","faDivide","faBackspace","faTimes","faMinus","faPlus","faEquals","Array","from","v","Router","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.a076d6da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bin2dec.64ea8a25.png\";","module.exports = __webpack_public_path__ + \"static/media/borderradius.c408ea4b.png\";","module.exports = __webpack_public_path__ + \"static/media/calculator.c52d76df.png\";","/**\r\n * @file Change title of the page\r\n * @author Matthew Moore\r\n * @module Helmet\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet as TitleSwitcher } from 'react-helmet';\r\nimport { JSX } from '../../types/types';\r\n\r\n/**\r\n * @desc React component to change the title of the page\r\n * @constant\r\n * @function Helmet\r\n * @param {string} title - The title of the page\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nexport const Helmet = ({ title }: { title: string }): JSX => {\r\n\treturn (\r\n\t\t<TitleSwitcher>\r\n\t\t\t<title>{title}</title>\r\n\t\t</TitleSwitcher>\r\n\t);\r\n};\r\n","/**\r\n * @file Display a button to route back to home\r\n * @author Matthew Moore\r\n * @module Home\r\n * @since 1.0.0\r\n * @version 2.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { JSX } from '../../types/types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './home.css';\r\n\r\n/**\r\n * @desc React component to route back to home\r\n * @constant\r\n * @function Home\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 2.0.0\r\n */\r\nexport const Home = (): JSX => {\r\n\treturn (\r\n\t\t<nav id=\"home\" data-testid=\"home\">\r\n\t\t\t<NavLink activeClassName=\"link\" to=\"/\">\r\n\t\t\t\tHome\r\n\t\t\t</NavLink>\r\n\t\t</nav>\r\n\t);\r\n};\r\n","/**\r\n * @file Convert binary to decimal\r\n * @author Matthew Moore\r\n * @module Bin2Dec\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport { JSX, InputEvent } from '../../types/types';\r\nimport './bin2dec.css';\r\n\r\n/**\r\n * @desc Convert the binary to decimal if possible\r\n * @constant\r\n * @function convert\r\n * @param {string} line - The line to process\r\n * @returns {string}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nconst convert = (line: string): string => {\r\n\tlet result: number = 0,\r\n\t\tpower: number = 0;\r\n\r\n\tif (!line.split('').every((char: string) => char === '0' || char === '1'))\r\n\t\treturn 'Invalid binary';\r\n\r\n\tlet lineNumber: number = Number(line);\r\n\r\n\twhile (lineNumber !== 0) {\r\n\t\tconst currSplit: number = lineNumber % 10;\r\n\t\tlineNumber -= currSplit;\r\n\t\tlineNumber /= 10;\r\n\t\tif (currSplit === 1) {\r\n\t\t\tresult += 2 ** power;\r\n\t\t}\r\n\t\tpower++;\r\n\t}\r\n\treturn result.toString();\r\n};\r\n\r\n/**\r\n * @desc Process the input and display the result\r\n * @constant\r\n * @function processInput\r\n * @returns {void}\r\n * @since 1.0.0\r\n * @version 1.0.0\r\n */\r\nconst processInput = (input: string): void => {\r\n\tconst result: HTMLElement | null = document.getElementById('res');\r\n\r\n\tinput += '\\n';\r\n\r\n\tif (result) {\r\n\t\tlet decimalVals: string = '',\r\n\t\t\tholdVals: string = '';\r\n\t\tfor (let i: number = 0; i < input.length; i++) {\r\n\t\t\tif (input[i] === '\\n' && holdVals !== '') {\r\n\t\t\t\tdecimalVals += `${convert(holdVals)}\\n`;\r\n\t\t\t\tholdVals = '';\r\n\t\t\t} else holdVals += input[i];\r\n\t\t}\r\n\r\n\t\tresult.textContent = decimalVals.substring(0, decimalVals.length - 1);\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc The Component to convert binary to decimal\r\n * @constant\r\n * @function Bin2Dec\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 3.0.0\r\n */\r\nexport const Bin2Dec = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"bin2dec\" data-testid=\"bin2dec\">\r\n\t\t\t<Helmet title=\"Binary to Decimal\" />\r\n\t\t\t<Home />\r\n\r\n\t\t\t<div id=\"userinput\">\r\n\t\t\t\t<h1 className=\"title\">Binary Input</h1>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"binaryinput\"\r\n\t\t\t\t\tdata-testid=\"userinput\"\r\n\t\t\t\t\tonChange={(e: InputEvent) => processInput(e.target.value)}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"result\">\r\n\t\t\t\t<h1 className=\"title\">Decimal Output</h1>\r\n\t\t\t\t<textarea id=\"res\" data-testid=\"result\" readOnly></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file Change the values of border radius in real time\r\n * @author Matthew Moore\r\n * @module BorderRadius\r\n * @since 2.0.0\r\n * @version 3.0.1\r\n */\r\n\r\nimport React from 'react';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport { JSX, InputChange, ButtonClick } from '../../types/types';\r\nimport './borderradius.css';\r\n\r\n/**\r\n * @desc Change the border radius based on the percentages provided in the input\r\n * @constant\r\n * @function changeRadius\r\n * @returns {void}\r\n * @since 2.0.0\r\n * @version 2.0.0\r\n */\r\nconst changeRadius = (element: HTMLElement | null): void => {\r\n\tconst value: string = (element as HTMLInputElement).value.replace(\r\n\t\t/%|\\//g,\r\n\t\t''\r\n\t);\r\n\r\n\tconst percentages: string[] = value\r\n\t\t.split(' ')\r\n\t\t.filter((char: string) => char.match(/[0-9]/));\r\n\r\n\tif (percentages.length !== 8)\r\n\t\t(element as HTMLInputElement).style.color = 'red';\r\n\telse {\r\n\t\t(element as HTMLInputElement).style.color = 'black';\r\n\r\n\t\tconst box: HTMLElement | null = document.getElementById('preview');\r\n\r\n\t\tlet radius: string = percentages.join('% ') + '%';\r\n\t\tradius =\r\n\t\t\tradius\r\n\t\t\t\t.split(' ')\r\n\t\t\t\t.slice(0, percentages.length / 2)\r\n\t\t\t\t.join(' ') +\r\n\t\t\t' / ' +\r\n\t\t\tradius\r\n\t\t\t\t.split(' ')\r\n\t\t\t\t.slice(percentages.length / 2)\r\n\t\t\t\t.join(' ');\r\n\r\n\t\t(box as HTMLDivElement).style.borderRadius = radius;\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc Copies the text in the input field\r\n * @constant\r\n * @function copyText\r\n * @returns {void}\r\n * @since 2.0.0\r\n * @version 2.0.5\r\n */\r\nconst copyText = (element: HTMLElement | null): void => {\r\n\tconst input: HTMLElement | null = document.getElementById('input');\r\n\r\n\tconst value: string = (input as HTMLInputElement).value.replace(/%|\\//g, '');\r\n\r\n\tconst split: string[] = value\r\n\t\t.split(' ')\r\n\t\t.filter((char: string) => char.match(/[0-9]/));\r\n\r\n\tconst el = document.createElement('textarea');\r\n\tel.value =\r\n\t\t'border-radius: ' +\r\n\t\tsplit.slice(0, split.length / 2).join('% ') +\r\n\t\t'% / ' +\r\n\t\tsplit.slice(split.length / 2).join('% ') +\r\n\t\t'%;';\r\n\tel.setAttribute('readonly', '');\r\n\tel.style.position = 'absolute';\r\n\tel.style.left = '-9999px';\r\n\tdocument.body.appendChild(el);\r\n\tel.select();\r\n\tdocument.execCommand('copy');\r\n\tdocument.body.removeChild(el);\r\n\r\n\t(element as HTMLInputElement).textContent = 'Copied!';\r\n\r\n\tsetTimeout(() => {\r\n\t\t(element as HTMLInputElement).textContent = 'Copy';\r\n\t}, 1000);\r\n};\r\n\r\n/**\r\n * @desc Change the values of border radius in real time\r\n * @constant\r\n * @function BorderRadius\r\n * @returns {JSX}\r\n * @since 2.0.0\r\n * @version 2.0.0\r\n */\r\nexport const BorderRadius = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"borderradius\" data-testid=\"borderradius\">\r\n\t\t\t<Helmet title=\"Border Radius Previewer\" />\r\n\t\t\t<Home />\r\n\r\n\t\t\t<div id=\"userInteraction\">\r\n\t\t\t\t<h1 id=\"head\">Border Radius</h1>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\tdata-testid=\"input\"\r\n\t\t\t\t\tplaceholder=\"0% 0% 0% 0% / 0% 0% 0% 0%\"\r\n\t\t\t\t\tonChange={(e: InputChange) => changeRadius(e.currentTarget)}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"copy\"\r\n\t\t\t\t\tdata-testid=\"copy\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => copyText(e.currentTarget)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"preview\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { projects } from '../../types/types';\r\nimport bin2dec from '../../images/bin2dec.png';\r\nimport borderradius from '../../images/borderradius.png';\r\nimport calculator from '../../images/calculator.png';\r\n\r\nexport const projectData: projects = {\r\n\tprojects: [\r\n\t\t{\r\n\t\t\tlocation: '/bin2dec',\r\n\t\t\ttitle: 'Binary to Decimal',\r\n\t\t\timage: bin2dec,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlocation: '/borderradius',\r\n\t\t\ttitle: 'Border Radius Previewer',\r\n\t\t\timage: borderradius,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlocation: '/calculator',\r\n\t\t\ttitle: 'Calculator',\r\n\t\t\timage: calculator,\r\n\t\t},\r\n\t],\r\n};\r\n","/**\r\n * @file The Index page to display all the projects\r\n * @author Matthew Moore\r\n * @module ProjectDisplay\r\n * @since 3.0.0\r\n * @version 3.0.5\r\n */\r\n\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { JSX, project } from '../../types/types';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { projectData } from '../Projects/Projects';\r\nimport './projectdisplay.css';\r\n\r\n/**\r\n * @desc The display page for all the projects\r\n * @constant\r\n * @function ProjectDisplay\r\n * @returns {JSX}\r\n * @since 3.0.0\r\n * @version 3.0.5\r\n */\r\n\r\nexport const ProjectDisplay = (): JSX => {\r\n\treturn (\r\n\t\t<div id=\"projectLinks\" data-testid=\"projectDisplay\">\r\n\t\t\t<Helmet title=\"Project List\" />\r\n\r\n\t\t\t<h1 id=\"displayTitle\">Projects</h1>\r\n\r\n\t\t\t<nav id=\"projectDisplay\">\r\n\t\t\t\t{projectData.projects.map((item: project, index: number) => (\r\n\t\t\t\t\t<NavLink to={item.location} key={index}>\r\n\t\t\t\t\t\t<div className=\"projectBox\">\r\n\t\t\t\t\t\t\t<h3 className=\"projectTitle\">{item.title}</h3>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={item.image}\r\n\t\t\t\t\t\t\t\theight={200}\r\n\t\t\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\t\t\talt={`${item.title} example`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t))}\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file Real time calculator\r\n * @author Matthew Moore\r\n * @module Calculator\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\n\r\n// TODO Test the project you monkey\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n\tButtonClick,\r\n\tJSX,\r\n\tStringState,\r\n\tBoolState,\r\n\tButtonDown,\r\n} from '../../types/types';\r\nimport { Helmet } from '../Helmet/Helmet';\r\nimport { Home } from '../Home/Home';\r\nimport './calculator.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n\tfaBackspace,\r\n\tfaEquals,\r\n\tfaMinus,\r\n\tfaPlus,\r\n\tfaTimes,\r\n\tfaDivide,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n/**\r\n * @desc For when a number button is clicked or pressed\r\n * @constant\r\n * @function valueButton\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @param {number} index - The number to add to the input\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\nconst valueButton = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tsetAllClear: BoolState,\r\n\tindex: number\r\n): void => {\r\n\tsetInput(`${input}${index.toString()}`);\r\n\tsetAllClear(false);\r\n};\r\n\r\n/**\r\n * @desc For when period is clicked or pressed\r\n * @constant\r\n * @function valuePeriod\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\nconst valuePeriod = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tsetAllClear: BoolState\r\n): void => {\r\n\tsetInput(input.includes('.') ? input : `${input}.`);\r\n\tsetAllClear(false);\r\n};\r\n\r\n/**\r\n * @desc For when the equals key is clicked or pressed\r\n * @constant\r\n * @function valueEquals\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {string} result - The current result\r\n * @param {StringState} setResult - Set the result to a certain value\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\nconst valueEquals = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tresult: string,\r\n\tsetResult: StringState\r\n): void => {\r\n\tlet leftNumber: number = Number(result.split(' ')[0]),\r\n\t\trightNumber: number = Number(input);\r\n\r\n\tif (result.includes('÷')) {\r\n\t\tsetInput((leftNumber / rightNumber).toString());\r\n\t} else if (result.includes('×')) {\r\n\t\tsetInput((leftNumber * rightNumber).toString());\r\n\t} else if (result.includes('-') && result[0] !== '-') {\r\n\t\tsetInput((leftNumber - rightNumber).toString());\r\n\t} else if (result.includes('+')) {\r\n\t\tsetInput((leftNumber + rightNumber).toString());\r\n\t}\r\n\r\n\tsetResult(`${result} ${input} = `);\r\n};\r\n\r\n/**\r\n * @desc For when a mathematical operation key is clicked or pressed\r\n * @constant\r\n * @function valueMath\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {string} result - The current result\r\n * @param {StringState} setResult - Set the result to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @param {string} operation - Mathematical operation to do\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\nconst valueMath = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tresult: string,\r\n\tsetResult: StringState,\r\n\tsetAllClear: BoolState,\r\n\toperation: string\r\n): void => {\r\n\tif (input.length > 0) {\r\n\t\tsetResult(`${input} ${operation} `);\r\n\t} else {\r\n\t\tsetResult(`${result.split(' ')[0]} ${operation} `);\r\n\t}\r\n\r\n\tsetInput('');\r\n\tsetAllClear(true);\r\n};\r\n\r\n/**\r\n * @desc For when the backspace key is clicked or pressed\r\n * @constant\r\n * @function valueBackspace\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\nconst valueBackspace = (\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tsetAllClear: BoolState\r\n): void => {\r\n\tsetInput(\r\n\t\tinput[0] === '-' && input.length > 2\r\n\t\t\t? input.substring(0, input.length - 1)\r\n\t\t\t: input[0] === '-'\r\n\t\t\t? ''\r\n\t\t\t: input.substring(0, input.length - 1)\r\n\t);\r\n\tsetAllClear(\r\n\t\tinput[0] === '-' && input.length > 0\r\n\t\t\t? input.length - 2 === 0\r\n\t\t\t: input.length > 0\r\n\t\t\t? input.length - 1 === 0\r\n\t\t\t: input.length === 0\r\n\t);\r\n};\r\n\r\n/**\r\n * @desc For when a key is pressed\r\n * @constant\r\n * @function processKey\r\n * @param {string} key - The key pressed\r\n * @param {string} result - The current result\r\n * @param {StringState} setResult - Set the result to a certain value\r\n * @param {string} input - The current input\r\n * @param {StringState} setInput - Set the input to a certain value\r\n * @param {string} allClear - If AC or C is displayed\r\n * @param {BoolState} setAllClear - Whether AC or C should be displayed\r\n * @returns {void}\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\nconst processKey = (\r\n\tkey: string,\r\n\tresult: string,\r\n\tsetResult: StringState,\r\n\tinput: string,\r\n\tsetInput: StringState,\r\n\tallClear: boolean,\r\n\tsetAllClear: BoolState\r\n): void => {\r\n\tconst allowed: string[] = [\r\n\t\t'0',\r\n\t\t'1',\r\n\t\t'2',\r\n\t\t'3',\r\n\t\t'4',\r\n\t\t'5',\r\n\t\t'6',\r\n\t\t'7',\r\n\t\t'8',\r\n\t\t'9',\r\n\t\t'/',\r\n\t\t'-',\r\n\t\t'+',\r\n\t\t'*',\r\n\t\t'.',\r\n\t\t'Backspace',\r\n\t\t'Enter',\r\n\t];\r\n\r\n\tif (allowed.includes(key)) {\r\n\t\tif (key.match(/[0-9]/))\r\n\t\t\tvalueButton(input, setInput, setAllClear, Number(allowed.indexOf(key)));\r\n\t\telse {\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase '.':\r\n\t\t\t\t\tvaluePeriod(input, setInput, setAllClear);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Enter':\r\n\t\t\t\t\tvalueEquals(input, setInput, result, setResult);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '+');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '-');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '×');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '÷');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Backspace':\r\n\t\t\t\t\tvalueBackspace(input, setInput, setAllClear);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @desc Real time calculator\r\n * @constant\r\n * @function Calculator\r\n * @returns {JSX}\r\n * @since 4.0.0\r\n * @version 4.0.0\r\n */\r\nexport const Calculator = (): JSX => {\r\n\tconst [result, setResult] = useState('');\r\n\tconst [input, setInput] = useState('');\r\n\tconst [allClear, setAllClear] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.onkeydown = (e: KeyboardEvent) =>\r\n\t\t\tprocessKey(\r\n\t\t\t\te.key,\r\n\t\t\t\tresult,\r\n\t\t\t\tsetResult,\r\n\t\t\t\tinput,\r\n\t\t\t\tsetInput,\r\n\t\t\t\tallClear,\r\n\t\t\t\tsetAllClear\r\n\t\t\t);\r\n\r\n\t\treturn function cleanup() {\r\n\t\t\tdocument.onkeydown = null;\r\n\t\t};\r\n\t});\r\n\r\n\tinterface Dictionary {\r\n\t\t[key: number]: string;\r\n\t}\r\n\r\n\tconst nums: Dictionary = {\r\n\t\t0: 'zero',\r\n\t\t1: 'one',\r\n\t\t2: 'two',\r\n\t\t3: 'three',\r\n\t\t4: 'four',\r\n\t\t5: 'five',\r\n\t\t6: 'six',\r\n\t\t7: 'seven',\r\n\t\t8: 'eight',\r\n\t\t9: 'nine',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"calculator\" data-testid=\"calculator\">\r\n\t\t\t<Home />\r\n\t\t\t<Helmet title=\"Calculator\" />\r\n\t\t\t<div id=\"calculatorGrid\">\r\n\t\t\t\t<div id=\"calculatorInput\" className=\"whiteColor operations\">\r\n\t\t\t\t\t{input}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"calculatorOutput\" className=\"whiteColor operations\">\r\n\t\t\t\t\t{result}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"clear\"\r\n\t\t\t\t\tclassName=\"whiteColor topRow\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) => {\r\n\t\t\t\t\t\tsetAllClear(true);\r\n\t\t\t\t\t\tsetInput('');\r\n\t\t\t\t\t\tsetResult(allClear ? '' : result);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{allClear ? 'AC' : 'C'}\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"sign\"\r\n\t\t\t\t\tclassName=\"whiteColor topRow\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tsetInput(input[0] === '-' ? input.substring(1) : `-${input}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t+/-\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"division\"\r\n\t\t\t\t\tclassName=\"topRow\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '÷')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor topRow\" icon={faDivide} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"backspace\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueBackspace(input, setInput, setAllClear)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faBackspace} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"mult\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '×')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faTimes} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"minus\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '-')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faMinus} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"plus\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueMath(input, setInput, result, setResult, setAllClear, '+')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faPlus} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"equals\"\r\n\t\t\t\t\tclassName=\"leftSide\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvalueEquals(input, setInput, result, setResult)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon className=\"whiteColor leftSide\" icon={faEquals} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"period\"\r\n\t\t\t\t\tclassName=\"whiteColor numberPeriod\"\r\n\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\tvaluePeriod(input, setInput, setAllClear)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t.\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{Array.from({ length: 10 }, (v: undefined, i: number) => i).map(\r\n\t\t\t\t\t(value: number, index: number) => (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"whiteColor numberPeriod\"\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tid={nums[index]}\r\n\t\t\t\t\t\t\tonClick={(e: ButtonClick) =>\r\n\t\t\t\t\t\t\t\tvalueButton(input, setInput, setAllClear, index)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonKeyDown={(e: ButtonDown) => {\r\n\t\t\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{index}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/**\r\n * @file The Router for all the projects\r\n * @author Matthew Moore\r\n * @module Router\r\n * @since 1.0.0\r\n * @version 4.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { HashRouter as Routes, Switch, Route } from 'react-router-dom';\r\nimport { Bin2Dec } from '../Bin2Dec/Bin2Dec';\r\nimport { BorderRadius } from '../BorderRadius/BorderRadius';\r\nimport { ProjectDisplay } from '../ProjectDisplay/ProjectDisplay';\r\nimport { Calculator } from '../Calculator/Calculator';\r\nimport { JSX } from '../../types/types';\r\n\r\n/**\r\n * @desc The Router for all the projects\r\n * @constant\r\n * @function Router\r\n * @returns {JSX}\r\n * @since 1.0.0\r\n * @version 4.0.0\r\n */\r\nexport const Router = (): JSX => {\r\n\treturn (\r\n\t\t<Routes>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<ProjectDisplay />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/bin2dec\">\r\n\t\t\t\t\t<Bin2Dec />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/borderradius\">\r\n\t\t\t\t\t<BorderRadius />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/calculator\">\r\n\t\t\t\t\t<Calculator />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Routes>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Router } from './components/Router/Router';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n"],"sourceRoot":""}